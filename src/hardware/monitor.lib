; ================================== ;
; MondOS - Monitor Library Routines  ;
; By: Henri Kim                      ;
; ================================== ;
%IFNDEF __MONITOR_LIB__
%DEFINE __MONITOR_LIB__
;+__________________________________+;
;+ \/ Main Strings _________________+;
NameSystem db "MondOS",0
;+ /\ ______________________________+;

;+__________________________________+;
;+ \/ Window Configurations_________+;
Count      dw 0000h
BackWidth  dw 0000h
BackHeight dw 0000h
BackColor  db 0001b
Pagination db 0
CursorX    db 15
CursorY    db 12
State      db 0
;+ /\ ______________________________+;

;+__________________________________+;
;+ \/ Routine Library ______________+;

; Definir modo de video e posição padrão
VGA.SetVideoMode:
    mov ah, 00h
    mov al, 13h
    int 10h
    mov ax, 320
    mov WORD[BackWidth], ax
    mov ax, 200
    mov WORD[BackHeight], ax
    call DrawPixelConfig
    ret

; Gravar pixels na tela
DrawPixelConfig:
    mov ah, 0ch
    mov al, [BackColor]
    mov cx, 0
    mov dx, 0
    ret

; Pintar o fundo da tela
DrawBackground:
    int 10h
    inc cx
    cmp cx, WORD[BackWidth]
    jne DrawBackground
    mov cx, 0
    inc dx
    cmp dx, WORD[BackHeight]
    jne DrawBackground
    mov dx, 0
    ret

; Mostra uma string na tela
PrintString:
    mov ah, 09h
    mov bh, [Pagination]
    mov cx, 1
    mov al, [si]
    print:
        int 10h
        inc si
        call MoveCursor
        mov ah, 09h
        mov al, [si]
        cmp al, 0
        jne print
    ret
; Move cursor.
MoveCursor:
    mov ah, 02h
    mov bh, [Pagination]
    inc dl
    int 10h
    ret

EffectInit:
    mov bl, 44
    start:
        mov dh, [CursorY]
        mov dl, [CursorX]
        call MoveCursor
        mov si, NameSystem
        call PrintString
        pusha
        mov bl, [State]
        cmp bl, 0
        je Increment
        jmp Decrement
    Increment:
        popa
        inc bl
        call Waiting
        cmp bl, 50
        jne start
        pusha
        mov bl, 1
        mov byte[State], bl
        popa
        jmp start
    Decrement:
        popa
        dec bl
        call Waiting
        cmp bl, 44
        jne start
        pusha
        mov bl, 0
        mov byte[State], bl
        mov bx, [Count]
        inc bx
        mov WORD[Count], bx
        cmp bx, 10
        jne ReturnLoop
        jmp ReturnProg
    ReturnLoop:
        popa
        jmp start
    ReturnProg:
        popa
    ret

Waiting:
    pusha
    mov ah, 86h
    mov cx, 0002h
    mov dx, 49F0h ; time = cx:dx (7A120 = (cx 2, dx 49F0)) = (150000 times = 150ms)
    int 15h
    popa
    ret

;+ /\ ______________________________+;
%ENDIF